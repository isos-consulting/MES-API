get:
  description: |
    BOM 데이터를 Tree 형태로 조회합니다.
  summary: BOM 데이터 Tree 형태 조회
  tags:
    - BOM
  parameters:
    - name: factory_uuid
      in: query
      description: |
        공장의 UUID를 입력하여 공장에 따라 BOM를 조회합니다. <br/>
        [전체 조회시 입력하지 않습니다.]
      schema:
        type: string
        format: uuid

    - name: prod_uuid
      in: query
      description: |
        품목의 UUID를 입력하여 해당 품목이 포함되어있는 모든 BOM 데이터를 조회합니다. <br/>
        [전체 조회시 입력하지 않습니다.]
      schema:
        type: string
        format: uuid

  responses:
    200:
      description: Read OK
      content:
        application/json:
          schema: 
            allOf:
              - $ref: ../../schemas/common/default-response.schema.yaml
              - type: object
                properties:
                  datas:
                    description: Enable
                    type: object
                    properties:
                      value:
                        description: Enable
                        type: object
                        properties:
                          count: 
                            description: 영향받은 데이터의 개수
                            type: number
                            format: int32
                            minimum: 0
                      raws:
                        description: BOM 데이터 목록
                        type: array
                        items:
                          allOf:
                            - $ref: ../../schemas/std/bom.schema.yaml#/lv
                            - $ref: ../../schemas/std/bom.schema.yaml#/main_prod_uuid
                            - $ref: ../../schemas/std/bom.schema.yaml#/p_prod_uuid
                            - $ref: ../../schemas/std/prod.schema.yaml#/prod_uuid
                            - $ref: ../../schemas/std/prod.schema.yaml#/prod_no
                            - $ref: ../../schemas/std/prod.schema.yaml#/prod_nm
                            - $ref: ../../schemas/std/prod.schema.yaml#/item_type_uuid
                            - $ref: ../../schemas/std/item-type.schema.yaml#/item_type_cd
                            - $ref: ../../schemas/std/item-type.schema.yaml#/item_type_nm
                            - $ref: ../../schemas/std/prod.schema.yaml#/prod_type_uuid
                            - $ref: ../../schemas/std/prod-type.schema.yaml#/prod_type_cd
                            - $ref: ../../schemas/std/prod-type.schema.yaml#/prod_type_nm
                            - $ref: ../../schemas/std/prod.schema.yaml#/model_uuid
                            - $ref: ../../schemas/std/model.schema.yaml#/model_cd
                            - $ref: ../../schemas/std/model.schema.yaml#/model_nm
                            - $ref: ../../schemas/std/prod.schema.yaml#/rev
                            - $ref: ../../schemas/std/prod.schema.yaml#/prod_std
                            - $ref: ../../schemas/std/bom.schema.yaml#/c_usage
                            - $ref: ../../schemas/std/bom.schema.yaml#/t_usage
                            - $ref: ../../schemas/std/prod.schema.yaml#/unit_uuid
                            - $ref: ../../schemas/std/unit.schema.yaml#/unit_cd
                            - $ref: ../../schemas/std/unit.schema.yaml#/unit_nm
                            - $ref: ../../schemas/std/bom.schema.yaml#/from_store_uuid
                            - $ref: ../../schemas/std/store.schema.yaml#/from_store_cd
                            - $ref: ../../schemas/std/store.schema.yaml#/from_store_nm
                            - $ref: ../../schemas/std/bom.schema.yaml#/from_location_uuid
                            - $ref: ../../schemas/std/location.schema.yaml#/from_location_cd
                            - $ref: ../../schemas/std/location.schema.yaml#/from_location_nm
                            - $ref: ../../schemas/std/bom.schema.yaml#/remark
    500:
      $ref: ../../responses/common/general-error.response.yaml